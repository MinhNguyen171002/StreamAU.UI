@page "/player"
@page "/player/{VideoId}/{title}"

@using UserUI.Data.Service
@using UserUI.Data.Model
@inject Service YoutubeService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        <body>
            <div class="container">
                <div class="main-video-container">
                    <iframe src="https://www.youtube.com/embed/@VideoId" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen preload="metadata" class="main-video"></iframe>
                    
                    <h3 class="main-vid-title">
                        @title <button @onclick="() =>Show()" class="love-btn"><i class="fa-solid fa-heart"></i></button>
                        <div class="add-message-container" hidden=@IsShow>
                            <div class="action">
                                <input type="text" class="search-input" @bind="@plname" @oninput="InputEvent" placeholder="Tạo danh sách mới" />
                                <button type="submit" @onclick="()=>AddPlist(context.User.Identity.Name)" class="add-btn">Add</button>
                            </div>
                            <div class="playlist">
                                @if (playLists == null)
                                {
                                    <p><em>Loading.....</em></p>
                                }
                                else
                                {
                                    @foreach (var playlist in playLists)
                                    {
                                        <div class="form-check">
                                            <label class="form-check-label" @onclick="()=>Checked(context.User.Identity.Name,VideoId,playlist.PlayListName)" for="flexCheckDefault">
                                                @playlist.PlayListName
                                            </label>
                                        </div>                                        
                                    }
                                }
                            </div>
                        </div>
                    </h3>
                </div>
                <div class="video-list-container">
                    <div class="video-list-title">
                        <button class="title" @onclick="@(_=>GetValue(null))">ALL</button>
                        @if (playLists == null)
                        {
                            <p><em>Loading.....</em></p>
                        }
                        else
                        {
                            @foreach (var a in playLists)
                            {
                                <button class="title" @onclick="@(_=>GetValue(a.PlayListId))">@a.PlayListName</button>
                            }
                        }
                    </div>
                    @if (Id == null)
                    {
                        @if (videos == null)
                        {
                            <p><em>Waiting......</em></p>
                        }
                        else
                        {
                            <div class="video-list-container">
                                @foreach (var video in videos)
                                {
                                    <div class="list active" @onclick="() => GetId(video.VideoId,video.Title)">
                                        <img src="@video.Thumbnail" alt="Video Thumbnail" class="list-video">
                                        <h3 class="list-title">@video.Title</h3>
                                    </div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div class="video-list-container">
                            @if (details == null)
                            {
                                <p><em>Waiting......</em></p>
                            }
                            else
                            {
                                @foreach (var video in details)
                                {
                                    <div class="list active" @onclick="() => GetId(video.VideoId,video.Title)">
                                        <img src="@video.Thumbnail" alt="Video Thumbnail" class="list-video">
                                        <h3 class="list-title">@video.Title</h3>
                                    </div>
                                }
                            }
                        </div>
                    }
                </div>
            </div>
        </body>
    </Authorized>
    <NotAuthorized>
        <body>
            <div class="container">
                <div class="main-video-container">
                    <iframe src="https://www.youtube.com/embed/@VideoId" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen preload="metadata" class="main-video"></iframe>
                    <h3 class="main-vid-title">@title <button @onclick="() =>Show()" class="love-btn"><i class="fa-solid fa-heart"></i></button> </h3>
                    <div class="login-message" hidden=@IsShow>
                        @if (context.User.Identity.Name == null)
                        {
                            <p class="text-center text-muted mt-5 mb-0">Bạn đã có tài khoản chưa? <a href="login" class="fw-bold text-body"><u>Đăng nhập!</u></a></p>
                        }
                    </div>
                </div>
                <div class="video-list-container">
                    @if (videos == null)
                    {
                        <p><em>Waiting......</em></p>
                    }else
                    {
                        @foreach (var video in videos)
                        {
                            <div class="list active" @onclick="() => GetId(video.VideoId, video.Title)">
                                <img src="@video.Thumbnail" alt="Video Thumbnail" class="list-video">
                                <h3 class="list-title">@video.Title</h3>
                            </div>
                        }
                    }
                </div>
            </div>
        </body>
    </NotAuthorized>
</AuthorizeView>
@code {
    [Parameter]
    public string VideoId { get; set; }
    [Parameter]
    public string title { get; set; }
    private List<UserPlayList> playLists;
    private List<YoutubeVideos> videos;
    private List<YoutubeVideo> details;
    private YoutubeVideo video;
    ClaimsPrincipal ClaimsPrincipalUser;
    private Guid? Id { get; set; } 
    private bool IsChecked { get; set; } = false;
    private bool IsShow { get; set; } = true;
    private string plname { get; set; }
    private string search { get; set; }
    protected override  async Task OnInitializedAsync()
    {
        if (VideoId != null)
        {
            videos = await YoutubeService.SearchAsync(title);
        }
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        ClaimsPrincipalUser = authState.User;

        if (ClaimsPrincipalUser.Identity != null)
        {
            var useridentity = ClaimsPrincipalUser.Identity.Name;
            playLists = await YoutubeService.GetUserList(useridentity);
        }
    }
    protected async Task SearchVideo()
    {
        videos = await YoutubeService.SearchAsync(search);
    }
    private void GetId(string id, string titleVideo)
    {
        VideoId = id;
        title = titleVideo;
    }
    private void InputEvent(ChangeEventArgs changeEvent)
    {
        plname = (string)changeEvent.Value;
    }
    private void Show()
    {
        IsShow = !IsShow;
    }
    private async Task Checked(string name, string id,string plname)
    {

        await YoutubeService.AddVideo(name,id,plname);
    }
    private async Task GetValue(Guid? id)
    {
        Id = id;
        if(id != null)
        {
            details = await YoutubeService.GetVideoDetail(id);
        }
    }
    private async Task AddPlist(string name)
    {
        await YoutubeService.AddplayList(name, plname);
    }
}
